eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"epilepsy-project/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"epilepsy-project/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=epilepsy-project/app.js");

;eval("define(\"epilepsy-project/components/badass-chart\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      attributeBindings : [\'width\', \'height\'],\n\n      width  : 1000,\n      height : 400,\n\n      draw: function() {\n        if (Ember.isEmpty(this.get(\'data\')))\n          return;\n      \n        var data = this.get(\'data\');\n        var secondaryData = this.get(\'secondaryData\');\n\n        var margin = {top: 20, right: 80, bottom: 30, left: 80},\n          width = this.get(\'width\') - margin.left - margin.right,\n          height = this.get(\'height\') - margin.top - margin.bottom;\n\n        this.set(\'width\', width);\n        this.set(\'height\', height);\n\n        var svg = d3.select(\"#\" + this.get(\'elementId\') + \" svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n          .append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n          .attr(\'viewBox\',\"0 0 \" + this.get(\'width\') + \" \" + this.get(\'height\'))\n          .attr(\'preserveAspectRatio\',\'xMinYMin\');\n\n        this.generateGraph(svg, data);\n\n        var sortedMeds = {};\n        secondaryData.forEach(function(datum) {\n          var currName = datum.name;\n          if (Ember.isEmpty(sortedMeds[currName])) {\n            sortedMeds[currName] = [];\n          } else {\n            console.log(sortedMeds);\n            console.log(currName);\n            window.thing = sortedMeds;\n            sortedMeds[currName].push(datum);\n          }\n        });\n\n        console.log(sortedMeds);\n\n        this.generateGraph(svg, secondaryData);\n      },\n\n      generateGraph: function(svg, data) {\n        var dom   = data.meta.domain,\n            val   = data.meta.value,\n            level = data.meta.level,\n            type  = data.meta.type,\n            title = data.meta.title;\n\n        var width = this.get(\'width\'),\n            height = this.get(\'height\');\n\n        var tooltip =\n          d3.tip()\n          .attr(\'class\', \'d3-tip\')\n          .offset([-10, 0])\n          .html( function(d) {\n            var info = \"<dl class=\\\"dl-horizontal\\\">\";\n            var tooltip = d.tooltip;\n\n            for (var k in tooltip) {\n              if (tooltip.hasOwnProperty(k)) {\n                info += \"<dt>\" + k + \"</dt><dd>\" + tooltip[k] + \"</dd>\";\n              }\n            }\n\n            info += \"</dl>\";\n            return info;\n          });\n\n        svg.call(tooltip);\n\n        var x = d3.time\n          .scale()\n          .range([0, this.get(\'width\')])\n          .domain([d3.min(data, function(d) { return d[dom]; } ), d3.max(data, function(d) { return d[dom]; })]);\n\n        var y = d3.scale.linear()\n          .range([height, 0])\n          .domain([0, d3.max(data, function(d) { return d[val] } )]);\n\n        if (level == \'primary\') {\n          var xAxis = d3.svg.axis()\n            .scale(x)\n            .orient(\'bottom\');\n          \n          svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis);\n        }\n\n        if (level == \'primary\') {\n          var orientation    = \'left\',\n              axisShift      = 6,\n              transformation = \"translate(-30, 0)\";\n        } else {\n          var orientation    = \'right\',\n              axisShift      = 24,\n              transformation = \"translate(\" + this.get(\'width\') + \", 0)\";\n        }\n\n        var yAxis = d3.svg.axis()\n          .scale(y)\n          .orient(orientation);\n\n        svg.append(\"g\")\n          .attr(\"class\", \"y axis\")\n          .attr(\"transform\", transformation)\n          .call(yAxis)\n          .append(\"text\")\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"y\", axisShift)\n          .attr(\"dy\", \".71em\")\n          .style(\"text-anchor\", \"end\")\n          .text(title);\n\n        if (type == \'bar\') {\n          var bars = svg.selectAll(\".bar\")\n            .data(data)\n            .enter().append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", function(d) { return x(d[dom]); })\n            .attr(\"width\", width / data.length - 8)\n            .attr(\"y\", function(d) { return y(d[val]); })\n            .attr(\"height\", function(d) { return height - y(d[val]); });\n\n          if (tooltip) {\n            bars\n            .on(\'mouseover\', tooltip.show)\n            .on(\'mouseout\', tooltip.hide);\n          }\n\n        } else if (type == \'line\') {\n\n          var line = d3.svg.line()\n            .x(function(d) { window.thing = x; console.log(d[dom]); return x(d[dom]); })\n            .y(function(d) { console.log(d[val]); return y(d[val]); })\n            .interpolate(\'linear\');\n\n          var lines = svg.append(\'g\')\n            .append(\'path\')\n            .attr(\'class\', \'line\')\n            .attr(\'stroke-width\', 2)\n            .attr(\'d\', line(data));\n        \n        } else if (type == \'dots\') {\n          var dots = svg\n          .append(\'g\')\n          .attr(\'class\', \'dots\')\n          .selectAll(\'g\')\n          .data(data)\n          .enter()\n          .append(\'g\');\n\n          dots\n          .append(\'circle\')\n          .attr(\'r\', 4)\n          .attr(\'cx\', function(d) { return x(d[dom]); })\n          .attr(\'cy\', function(d) { return y(d[val]); });\n          \n          if (tooltip) { \n            dots\n            .on(\'mouseover\', tooltip.show)\n            .on(\'mouseout\', tooltip.hide);\n          }\n        }\n\n      },\n\n      didInsertElement: function() {\n        this.draw();\n      },\n\n      dataChanged: function() {\n        if (this._state == \"inDOM\")\n          this.draw(); \n      }.observes(\'data.[],secondaryData.[]\')\n\n    });\n  });//# sourceURL=epilepsy-project/components/badass-chart.js");

;eval("define(\"epilepsy-project/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n\n      actions: {\n        bigCursor: function() {\n          Ember.$(\'body\').toggleClass(\'big-cursor\');\n        }\n      }\n\n    });\n  });//# sourceURL=epilepsy-project/controllers/application.js");

;eval("define(\"epilepsy-project/controllers/index\", \n  [\"ember\",\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n      api: \"http://115.146.95.69:8000\",\n\n      fetchData: function() {\n        return ajax(this.get(\'api\') + \"/patients/?format=json\");\n      }.property(\'api\'),\n\n      seizureData: function() {\n        this.get(\'fetchData\')\n        .then(function(data) {\n          var seizures = data[0][\'seizures\'];\n          seizures = this.setupSeizureData(seizures);\n          this.set(\'seizureData\', seizures);\n        }.bind(this));\n      }.property(\'fetchData\'),\n\n      medicationData: function() {\n        this.get(\'fetchData\')\n        .then(function(data) {\n          var medications = data[0][\'medications\'];\n          medications = this.setupMedicationData(medications);\n          this.set(\'medicationData\', medications);\n        }.bind(this));\n      }.property(\'fetchData\'),\n\n      setupSeizureData: function(data) {\n        data.forEach( function(datum) {\n          var parsedDate = Date.parse(datum.assessment_date);\n          \n          datum.assessment_date = parsedDate;\n\n          datum[\'tooltip\'] = {\n            assessment_date  : moment(parsedDate).format(\"MMMM Do YYYY\"),\n            frequency        : datum.frequency,\n            severity         : datum.episode_severity,\n            event_confidence : datum.event_confidence\n          }\n        });\n\n        data[\'meta\'] = {\n          domain : \'assessment_date\',\n          value  : \'episode_severity\',\n          level  : \'primary\',\n          type   : \'bar\',\n          title  : \'Seizure Frequency\'\n        };\n\n        return data;\n      },\n\n      setupMedicationData: function(data) {\n        data.forEach( function(datum) {\n          var parsedDate = Date.parse(datum.date);\n\n          datum.date = parsedDate;\n\n          datum[\'tooltip\'] = {\n            date            : moment(parsedDate).format(\"MMMM Do YYYY\"),\n            frequency       : datum.frequency,\n            name            : datum.name,\n            dosage          : datum.dosage,\n            dose_unit       : datum.dose_unit,\n            no_medications  : datum.no_medications\n          }\n        });\n\n        data[\'meta\'] = {\n          domain : \'date\',\n          value  : \'dosage\',\n          level  : \'secondary\',\n          type   : \'line\',\n          title  : \'Medications Dosage\'\n        };\n\n        return data;\n\n      }\n\n\n    });\n  });//# sourceURL=epilepsy-project/controllers/index.js");

;eval("define(\"epilepsy-project/controllers/patients/show\", \n  [\"ember\",\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n      seizureData: function() {\n        return this.setupSeizureData(this.get(\'seizures\'));\n      }.property(\'seizures\'),\n\n      medicationData: function() {\n        return this.setupMedicationData(this.get(\'medications\'));\n      }.property(\'medications\'),\n\n      setupSeizureData: function(data) {\n        data.forEach( function(datum) {\n          var parsedDate = Date.parse(datum.assessment_date);\n          \n          datum.assessment_date = parsedDate;\n\n          datum[\'tooltip\'] = {\n            assessment_date  : moment(parsedDate).format(\"MMMM Do YYYY\"),\n            frequency        : datum.frequency,\n            severity         : datum.episode_severity,\n            event_confidence : datum.event_confidence\n          }\n        });\n\n        data[\'meta\'] = {\n          domain : \'assessment_date\',\n          value  : \'episode_severity\',\n          level  : \'primary\',\n          type   : \'bar\',\n          title  : \'Seizure Frequency\'\n        };\n\n        return data;\n      },\n\n      setupMedicationData: function(data) {\n        data.forEach( function(datum) {\n          var parsedDate = Date.parse(datum.date);\n\n          datum.date = parsedDate;\n\n          datum[\'tooltip\'] = {\n            date            : moment(parsedDate).format(\"MMMM Do YYYY\"),\n            frequency       : datum.frequency,\n            name            : datum.name,\n            dosage          : datum.dosage,\n            dose_unit       : datum.dose_unit,\n            no_medications  : datum.no_medications\n          }\n        });\n\n        data[\'meta\'] = {\n          domain : \'date\',\n          value  : \'dosage\',\n          level  : \'secondary\',\n          type   : \'dots\',\n          title  : \'Medications Dosage\'\n        };\n\n        return data;\n\n      }\n\n    });\n  });//# sourceURL=epilepsy-project/controllers/patients/show.js");

;eval("define(\"epilepsy-project/helpers/format-date\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper( function(date, options) {\n\n      var format = options.hash.format || \'MMMM Do YYYY\',\n          formatted;\n      \n      if (Ember.isEmpty(date))\n        formatted = \"\";\n      else\n        formatted = moment(date).format(format);\n\n      return formatted;\n    });\n  });//# sourceURL=epilepsy-project/helpers/format-date.js");

;eval("define(\"epilepsy-project/router\", \n  [\"ember\",\"epilepsy-project/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.resource(\'patients\', function() {\n        this.route(\'show\', {path: \'/:patient_id\'});\n      });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=epilepsy-project/router.js");

;eval("define(\"epilepsy-project/routes/patients/index\", \n  [\"ember\",\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      model: function(params) {\n        return ajax(\'http://115.146.95.69:8000/patients/?format=json\');\n      }\n    });\n  });//# sourceURL=epilepsy-project/routes/patients/index.js");

;eval("define(\"epilepsy-project/routes/patients/show\", \n  [\"ember\",\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      model: function(params) {\n        return ajax(\'http://115.146.95.69:8000/patients/\' + params.patient_id + \'?format=json\');\n      }\n    });\n  });//# sourceURL=epilepsy-project/routes/patients/show.js");

;eval("define(\"epilepsy-project/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"bigCursor\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-primary\\\">Big cursor mode</button>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=epilepsy-project/templates/application.js");

;eval("define(\"epilepsy-project/templates/components/badass-chart\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<svg>\\n</svg>\");\n      \n    });\n  });//# sourceURL=epilepsy-project/templates/components/badass-chart.js");

;eval("define(\"epilepsy-project/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h2>Health Hack!!</h2>\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'badass-chart\'] || (depth0 && depth0[\'badass-chart\']),options={hash:{\n        \'data\': (\"seizureData\"),\n        \'secondaryData\': (\"medicationData\")\n      },hashTypes:{\'data\': \"ID\",\'secondaryData\': \"ID\"},hashContexts:{\'data\': depth0,\'secondaryData\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"badass-chart\", options))));\n      data.buffer.push(\"\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=epilepsy-project/templates/index.js");

;eval("define(\"epilepsy-project/templates/patients/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var stack1, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n  <table class=\\\"table\\\">\\n  <thead>\\n    <tr>\\n      <th>Date</th>\\n      <th>Dosage</th>\\n      <th>Dose Unit</th>\\n      <th>Frequency</th>\\n      <th>Name</th>\\n      <th>No Medications</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    \");\n      stack1 = helpers.each.call(depth0, \"medication\", \"in\", \"medications\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </tbody>\\n  </table>\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <tr>\\n        <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.date\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n        <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.dosage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n        <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.dose_unit\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n        <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.frequency\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n        <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n        <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.no_medications\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n      </tr>\\n    \");\n      return buffer;\n      }\n\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      \n    });\n  });//# sourceURL=epilepsy-project/templates/patients/index.js");

;eval("define(\"epilepsy-project/templates/patients/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    <tr>\\n      <td>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'format-date\'] || (depth0 && depth0[\'format-date\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"medication.date\", options) : helperMissing.call(depth0, \"format-date\", \"medication.date\", options))));\n      data.buffer.push(\"</td>\\n      <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.dosage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n      <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.dose_unit\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n      <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.frequency\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n      <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n      <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"medication.no_medications\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n    </tr>\\n  \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    <tr>\\n      <td>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'format-date\'] || (depth0 && depth0[\'format-date\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"seizure.assessment_date\", options) : helperMissing.call(depth0, \"format-date\", \"seizure.assessment_date\", options))));\n      data.buffer.push(\"</td>\\n      <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"seizure.episode_severity\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n      <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"seizure.event_confidence\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n      <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"seizure.frequency\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n    </tr>\\n  \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    <tr>\\n      <td>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'format-date\'] || (depth0 && depth0[\'format-date\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"surgery.date\", options) : helperMissing.call(depth0, \"format-date\", \"surgery.date\", options))));\n      data.buffer.push(\"</td>\\n      <td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"surgery.surgery_type\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n    </tr>\\n  \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h2>Patient Numero \");\n      stack1 = helpers._triageMustache.call(depth0, \"anon_number\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h2>\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'badass-chart\'] || (depth0 && depth0[\'badass-chart\']),options={hash:{\n        \'data\': (\"seizureData\"),\n        \'secondaryData\': (\"medicationData\")\n      },hashTypes:{\'data\': \"ID\",\'secondaryData\': \"ID\"},hashContexts:{\'data\': depth0,\'secondaryData\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"badass-chart\", options))));\n      data.buffer.push(\"\\n\\n<h3>Medications</h3>\\n\\n<table class=\\\"table table-hover table-striped\\\">\\n<thead>\\n  <tr>\\n    <th>Date</th>\\n    <th>Dosage</th>\\n    <th>Dose Unit</th>\\n    <th>Frequency</th>\\n    <th>Name</th>\\n    <th>No Medications</th>\\n  </tr>\\n</thead>\\n<tbody>\\n  \");\n      stack1 = helpers.each.call(depth0, \"medication\", \"in\", \"medications\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</tbody>\\n</table>\\n\\n\\n<h3>Seizures</h3>\\n\\n<table class=\\\"table table-hover table-striped\\\">\\n<thead>\\n  <tr>\\n    <th>Assessment Date</th>\\n    <th>Severity</th>\\n    <th>Event Confidence</th>\\n    <th>Frequency</th>\\n  </tr>\\n</thead>\\n<tbody>\\n  \");\n      stack1 = helpers.each.call(depth0, \"seizure\", \"in\", \"seizures\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</tbody>\\n</table>\\n\\n\\n<h3>Surgeries</h3>\\n\\n<table class=\\\"table table-hover table-striped\\\">\\n<thead>\\n  <tr>\\n    <th>Date</th>\\n    <th>Type</th>\\n  </tr>\\n</thead>\\n<tbody>\\n  \");\n      stack1 = helpers.each.call(depth0, \"surgery\", \"in\", \"surgeries\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</tbody>\\n</table>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=epilepsy-project/templates/patients/show.js");

;eval("define(\"epilepsy-project/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/app.jshint.js");

;eval("define(\"epilepsy-project/tests/components/badass-chart.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/badass-chart.js should pass jshint\', function() { \n      ok(false, \'components/badass-chart.js should pass jshint.\\ncomponents/badass-chart.js: line 11, col 7, Expected \\\'{\\\' and instead saw \\\'return\\\'.\\ncomponents/badass-chart.js: line 88, col 59, Missing semicolon.\\ncomponents/badass-chart.js: line 90, col 17, Expected \\\'===\\\' and instead saw \\\'==\\\'.\\ncomponents/badass-chart.js: line 101, col 17, Expected \\\'===\\\' and instead saw \\\'==\\\'.\\ncomponents/badass-chart.js: line 106, col 26, \\\'orientation\\\' is already defined.\\ncomponents/badass-chart.js: line 107, col 26, \\\'axisShift\\\' is already defined.\\ncomponents/badass-chart.js: line 108, col 26, \\\'transformation\\\' is already defined.\\ncomponents/badass-chart.js: line 113, col 15, \\\'orientation\\\' used out of scope.\\ncomponents/badass-chart.js: line 117, col 26, \\\'transformation\\\' used out of scope.\\ncomponents/badass-chart.js: line 121, col 18, \\\'axisShift\\\' used out of scope.\\ncomponents/badass-chart.js: line 126, col 16, Expected \\\'===\\\' and instead saw \\\'==\\\'.\\ncomponents/badass-chart.js: line 142, col 23, Expected \\\'===\\\' and instead saw \\\'==\\\'.\\ncomponents/badass-chart.js: line 155, col 23, Expected \\\'===\\\' and instead saw \\\'==\\\'.\\ncomponents/badass-chart.js: line 184, col 23, Expected \\\'===\\\' and instead saw \\\'==\\\'.\\ncomponents/badass-chart.js: line 185, col 7, Expected \\\'{\\\' and instead saw \\\'this\\\'.\\ncomponents/badass-chart.js: line 23, col 15, \\\'d3\\\' is not defined.\\ncomponents/badass-chart.js: line 62, col 7, \\\'d3\\\' is not defined.\\ncomponents/badass-chart.js: line 81, col 13, \\\'d3\\\' is not defined.\\ncomponents/badass-chart.js: line 84, col 16, \\\'d3\\\' is not defined.\\ncomponents/badass-chart.js: line 84, col 63, \\\'d3\\\' is not defined.\\ncomponents/badass-chart.js: line 86, col 13, \\\'d3\\\' is not defined.\\ncomponents/badass-chart.js: line 88, col 19, \\\'d3\\\' is not defined.\\ncomponents/badass-chart.js: line 91, col 19, \\\'d3\\\' is not defined.\\ncomponents/badass-chart.js: line 111, col 17, \\\'d3\\\' is not defined.\\ncomponents/badass-chart.js: line 144, col 18, \\\'d3\\\' is not defined.\\ncomponents/badass-chart.js: line 106, col 11, \\\'orientation\\\' is defined but never used.\\ncomponents/badass-chart.js: line 107, col 11, \\\'axisShift\\\' is defined but never used.\\ncomponents/badass-chart.js: line 108, col 11, \\\'transformation\\\' is defined but never used.\\ncomponents/badass-chart.js: line 149, col 11, \\\'lines\\\' is defined but never used.\\n\\n29 errors\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/components/badass-chart.jshint.js");

;eval("define(\"epilepsy-project/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(true, \'controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/controllers/application.jshint.js");

;eval("define(\"epilepsy-project/tests/controllers/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/index.js should pass jshint\', function() { \n      ok(false, \'controllers/index.js should pass jshint.\\ncontrollers/index.js: line 41, col 8, Missing semicolon.\\ncontrollers/index.js: line 68, col 8, Missing semicolon.\\ncontrollers/index.js: line 37, col 28, \\\'moment\\\' is not defined.\\ncontrollers/index.js: line 62, col 27, \\\'moment\\\' is not defined.\\n\\n4 errors\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/controllers/index.jshint.js");

;eval("define(\"epilepsy-project/tests/controllers/patients/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/patients\');\n    test(\'controllers/patients/show.js should pass jshint\', function() { \n      ok(false, \'controllers/patients/show.js should pass jshint.\\ncontrollers/patients/show.js: line 25, col 8, Missing semicolon.\\ncontrollers/patients/show.js: line 52, col 8, Missing semicolon.\\ncontrollers/patients/show.js: line 21, col 28, \\\'moment\\\' is not defined.\\ncontrollers/patients/show.js: line 46, col 27, \\\'moment\\\' is not defined.\\ncontrollers/patients/show.js: line 2, col 8, \\\'ajax\\\' is defined but never used.\\n\\n5 errors\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/controllers/patients/show.jshint.js");

;eval("define(\"epilepsy-project/tests/epilepsy-project/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - epilepsy-project/tests/helpers\');\n    test(\'epilepsy-project/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'epilepsy-project/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/epilepsy-project/tests/helpers/resolver.jshint.js");

;eval("define(\"epilepsy-project/tests/epilepsy-project/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - epilepsy-project/tests/helpers\');\n    test(\'epilepsy-project/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'epilepsy-project/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/epilepsy-project/tests/helpers/start-app.jshint.js");

;eval("define(\"epilepsy-project/tests/epilepsy-project/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - epilepsy-project/tests\');\n    test(\'epilepsy-project/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'epilepsy-project/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/epilepsy-project/tests/test-helper.jshint.js");

;eval("define(\"epilepsy-project/tests/helpers/format-date.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/format-date.js should pass jshint\', function() { \n      ok(false, \'helpers/format-date.js should pass jshint.\\nhelpers/format-date.js: line 9, col 5, Expected \\\'{\\\' and instead saw \\\'formatted\\\'.\\nhelpers/format-date.js: line 11, col 5, Expected \\\'{\\\' and instead saw \\\'formatted\\\'.\\nhelpers/format-date.js: line 11, col 17, \\\'moment\\\' is not defined.\\n\\n3 errors\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/helpers/format-date.jshint.js");

;eval("define(\"epilepsy-project/tests/helpers/resolver\", \n  [\"ember/resolver\",\"epilepsy-project/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=epilepsy-project/tests/helpers/resolver.js");

;eval("define(\"epilepsy-project/tests/helpers/start-app\", \n  [\"ember\",\"epilepsy-project/app\",\"epilepsy-project/router\",\"epilepsy-project/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=epilepsy-project/tests/helpers/start-app.js");

;eval("define(\"epilepsy-project/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/router.jshint.js");

;eval("define(\"epilepsy-project/tests/routes/patients/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/patients\');\n    test(\'routes/patients/index.js should pass jshint\', function() { \n      ok(false, \'routes/patients/index.js should pass jshint.\\nroutes/patients/index.js: line 6, col 19, \\\'params\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/routes/patients/index.jshint.js");

;eval("define(\"epilepsy-project/tests/routes/patients/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/patients\');\n    test(\'routes/patients/show.js should pass jshint\', function() { \n      ok(true, \'routes/patients/show.js should pass jshint.\'); \n    });\n  });//# sourceURL=epilepsy-project/tests/routes/patients/show.jshint.js");

;eval("define(\"epilepsy-project/tests/test-helper\", \n  [\"epilepsy-project/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=epilepsy-project/tests/test-helper.js");
